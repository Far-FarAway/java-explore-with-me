CREATE TABLE IF NOT EXISTS users (
    user_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(250) NOT NULL,
    email VARCHAR(254) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS categories (
    category_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(50) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS events (
    event_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    annotation VARCHAR(2000),
    title VARCHAR(120) NOT NULL,
    description VARCHAR(7000) NOT NULL,
    category_id INT REFERENCES categories(category_id) NOT NULL,
    createdOn TIMESTAMP NOT NULL,
    publishedOn TIMESTAMP,
    eventDate TIMESTAMP NOT NULL,
    user_id INT REFERENCES users(user_id),
    lot FLOAT NOT NULL,
    lon FLOAT NOT NULL,
    paid BOOLEAN DEFAULT false,
    participantLimit INT DEFAULT 0,
    confirmed_requests INT,
    requestModeration BOOLEAN DEFAULT true,
    state VARCHAR(30)
);

CREATE TABLE IF NOT EXISTS compilations (
    compilation_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    pinned BOOLEAN,
    title VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS compilations_events (
    compilation_id INT REFERENCES compilations(compilation_id) NOT NULL,
    event_id INT REFERENCES events(event_id) NOT NULL
);

CREATE TABLE IF NOT EXISTS requests (
    request_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created TIMESTAMP NOT NULL,
    event_id INT REFERENCES events(event_id) ON DELETE CASCADE NOT NULL,
    user_id INT REFERENCES users(user_id) ON DELETE CASCADE NOT NULL,
    status VARCHAR(50) NOT NULL
);